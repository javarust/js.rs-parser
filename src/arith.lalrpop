use std::str::FromStr;
use ast::{BinOp, Exp};

grammar;

pub Exp: Box<Exp> = {
    Exp AddOp MulExp => Box::new(Exp::BinExp(<>)),
    MulExp,
};

AddOp: BinOp = {
    "+" => BinOp::Plus,
    "-" => BinOp::Minus,
};

MulExp: Box<Exp> = {
    MulExp MulOp Term => Box::new(Exp::BinExp(<>)),
    Term,
};

MulOp: BinOp = {
    "*" => BinOp::Star,
};

Term: Box<Exp> = {
    Int => Box::new(Exp::Int(<>)),
    Float => Box::new(Exp::Float(<>)),
    "(" <Exp> ")",
};

Int: i64 = {
    r"-?[0-9]+" => i64::from_str(<>).unwrap()
};

Float: f64 = {
    r"-?[0-9]+\.[0-9]+" => f64::from_str(<>).unwrap()
};
